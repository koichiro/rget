#!/usr/bin/env ruby

require 'thor'
require 'pathname'
require 'yaml'
require 'ostruct'
require 'webradio'
require 'podcast'

class GetWebRadio < Thor
	class_option :mp3, type: :boolean, default:true, desc:'convert to mp3 with ffmpeg'
	class_option :path, type: :string, desc:'store path (accept "dropbox://~")'

	config_file = nil
	[
		'./rget.yaml',
		'~/.rget',
		"#{Pathname(__dir__)}/../rget.yaml",
	].each do |file|
		path = Pathname(file).expand_path
		if path.exist?
			config_file = path.to_s
			break
		end
	end
	unless config_file
		$stderr.puts 'config file not found'
		exit 1
	end

	config = YAML::load_file(config_file)
	config['programs'].each do |command, params|
		desc command, params['desc']
		define_method(command) do
			url = params['url']
			opts = OpenStruct.new(config['options'].merge(options))
			begin
				if params['podcast']
					Podcast.new(url, opts){|media|media.download(params['label'])}
				else
					WebRadio(url, opts){|media|media.download(params['label'])}
				end
			rescue WebRadio::NotFoundError => e
				$stderr.puts e.message
			rescue WebRadio::DownloadError => e
				$stderr.puts e.message
			end
		end
	end

	desc 'yaml', 'dump YAML of specified URL'
	def yaml(url)
		dump = WebRadio(url, OpenStruct.new({dump: true})).dump
		puts YAML.dump(dump).lines.drop(1).map{|l| "  #{l}"}
	end
end

GetWebRadio.start(ARGV)
